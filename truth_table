/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package compiler;
import java.io.*;
import java.util.StringTokenizer;

/**
 *
 * @author scorpian(shambo)
 */
public class truth_table {
    public static void main(String args[])
    {
        
        try{
            FileInputStream fstream=new FileInputStream("truth.txt");
            DataInputStream in=new DataInputStream(fstream);
            BufferedReader br=new BufferedReader(new InputStreamReader(in));
             String a=null,b=null,c=null,op1=null,op2=null;
            int flagop1=0;
            String str;
            
            
            FileWriter fstream1=new FileWriter("outtruth.txt");
            BufferedWriter out=new BufferedWriter(fstream1);        
            
            
            while((str=br.readLine())!=null)
            {   
                StringTokenizer str1=new StringTokenizer(str);
                    int i=0;int flag5=0;
                    byte a2[]={0,0,1,1};
                        byte b2[]={0,1,0,1};
                        byte d2[]=new byte[4];
                        byte d0[]={0,1};
                        byte d02[]=new byte[2];
                        byte a1[]={0,0,0,0,1,1,1,1};    
                        byte b1[]={0,0,1,1,0,0,1,1};
                        byte c1[]={0,1,0,1,0,1,0,1};
                                int no_of_v=str1.countTokens();
                    if(no_of_v==2){
                                    a=str1.nextToken();
                          if(a.equalsIgnoreCase("NOT"))
                          {
                              a=str1.nextToken();
                               for(int j=0;j<2;j++)
                                {
                                    d02[j]=(byte)(1-d0[j]);
                                }
                              
                          }
                          
                          
                          System.out.println(a+"  "+"o/p");
                        out.write(a+"  "+"o/p");
                        out.newLine();
                        for(int j=0;j<2;j++)
                        {
                            System.out.println(d0[j]+"  "+d02[j]);
                            out.write(a1[j]+"  "+d02[j]);
                            out.newLine();
                        }
                        out.newLine(); 
                          
                        flag5=1;
                    
                    }            
                    else if(no_of_v==5)
                    {
                           a=str1.nextToken();
                          if(a.equalsIgnoreCase("NOT"))
                          {
                              a=str1.nextToken();
                               for(int j=0;j<4;j++)
                                {
                                    a2[j]=(byte)(1-a2[j]);
                                }
                              
                          }
                          op1=str1.nextToken();
                          b=str1.nextToken();
                          if(b.equalsIgnoreCase("NOT"))
                          {
                              b=str1.nextToken();
                               for(int j=0;j<4;j++)
                                {
                                    b2[j]=(byte)(1- b2[j]);
                                }
                              flag5=1;
                              System.out.println("hi");
                          }
                    }
                    if(flag5==0)
                    {    
                    if(no_of_v==5)
                    {
                        StringTokenizer str2=new StringTokenizer(str);
                          a=str2.nextToken();  
                          op1=str2.nextToken();
                          b=str2.nextToken();
                          op2=str2.nextToken();
                          c=str2.nextToken();
                          //flag5=2;
                    }
                    else if(no_of_v==3)
                    {
                          a=str1.nextToken();  
                          op1=str1.nextToken();
                          b=str1.nextToken();
                           //flag5=2;
                    }
                    else if(no_of_v==4 )
                    {
                          a=str1.nextToken();
                          if(a.equalsIgnoreCase("NOT"))
                          {
                              a=str1.nextToken();
                               for(int j=0;j<4;j++)
                                {
                                    a2[j]=(byte)(1-a2[j]);
                                }
                              
                          }
                          op1=str1.nextToken();
                          b=str1.nextToken();
                          if(b.equalsIgnoreCase("NOT"))
                          {
                              b=str1.nextToken();
                               for(int j=0;j<4;j++)
                                {
                                    b2[j]=(byte)(1 - b2[j]);
                                }
                              
                          }
                           //flag5=2;
                    }
                    
                    else if(no_of_v==6 || no_of_v==7 || no_of_v==8 )
                    {
                          a=str1.nextToken();
                          if(a.equalsIgnoreCase("NOT"))
                          {
                              a=str1.nextToken();
                               for(int j=0;j<8;j++)
                                {
                                    a1[j]=(byte)(1 - a1[j]);
                                }
                              
                          }
                          op1=str1.nextToken();
                          b=str1.nextToken();
                          if(b.equalsIgnoreCase("NOT"))
                          {
                              b=str1.nextToken();
                               for(int j=0;j<8;j++)
                                {
                                    b1[j]=(byte)(1- b1[j]);
                                }
                              
                          }
                          op2=str1.nextToken();
                          c=str1.nextToken();
                          if(b.equalsIgnoreCase("NOT"))
                          {
                              c=str1.nextToken();
                               for(int j=0;j<8;j++)
                                {
                                    c1[j]=(byte)(1 - c1[j]);
                                }
                              
                          } //flag5=2;
                    }
                    
                    else
                    {
                        System.out.println("Error");
                        
                       // System.exit(0);
                        
                    }
                    }
                    
                    
                    if((no_of_v==5 || no_of_v==6 || no_of_v==7 || no_of_v==8) && flag5==0)
                    {
                        byte d[]=new byte[8];
                        byte e[]=new byte[8];
                        if(flagop1==0)        
                        {   if(op1.equalsIgnoreCase("AND"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    d[j]=(byte) (a1[j]&b1[j]);
                                }
                                flagop1=1;
                            
                            }
                            else if(op1.equalsIgnoreCase("OR"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    d[j]=(byte) (a1[j]|b1[j]);
                                }
                                flagop1=1;
                            }
                            else if(op1.equalsIgnoreCase("XOR"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    d[j]=(byte) (a1[j]^b1[j]);
                                }
                                flagop1=1;
                            }
                            else if(op1.equalsIgnoreCase("NAND"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    d[j]=(byte) (a1[j]&b1[j]);
                                    d[j]=(byte)(1 - d[j]);
                                }
                                flagop1=1;
                            }
                            else if(op1.equalsIgnoreCase("NOR"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    d[j]=(byte) (a1[j]|b1[j]);
                                    d[j]=(byte)(1 - d[j]);
                                }
                                flagop1=1;
                            }
                        }
                        if(flagop1==1)
                        {
                            if(op2.equalsIgnoreCase("AND"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    e[j]=(byte) (d[j]&c1[j]);
                                }
                                //flagop1=1;
                            
                            }
                            else if(op2.equalsIgnoreCase("OR"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    e[j]=(byte) (d[j]|c1[j]);
                                }
                                //flagop1=1;
                            }
                            else if(op1.equalsIgnoreCase("XOR"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    e[j]=(byte) (d[j]^c1[j]);
                                }
                               // flagop1=1;
                            }
                            else if(op1.equalsIgnoreCase("NAND"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    e[j]=(byte) (d[j]&c1[j]);
                                    e[j]=(byte)(1 - e[j]);
                                }
                                //flagop1=1;
                            }
                            else if(op1.equalsIgnoreCase("NOR"))
                            {
                                for(int j=0;j<8;j++)
                                {
                                    e[j]=(byte) (d[j]|c1[j]);
                                    e[j]=(byte)(1 - e[j]);
                                }
                                //flagop1=1;
                            }
                        
                        
                        
                        
                        }
                        System.out.println(a+"  "+b+"   "+c+"   "+"o/p");
                        out.write(a+"  "+b+"   "+c+"   "+"o/p");
                        out.newLine();
                        for(int j=0;j<8;j++)
                        {
                            System.out.println(a1[j]+"  "+b1[j]+"   "+c1[j]+"   "+e[j]);
                            out.write(a1[j]+"  "+b1[j]+"   "+c1[j]+"   "+e[j]);
                            out.newLine();
                        }
                        out.newLine();    
                            
                    }   
                    else if(no_of_v==5 || no_of_v==4 || no_of_v==3 )
                    {
                        flagop1=0;
                        byte d[]=new byte[8];
                        byte e[]=new byte[8];
                        if(flagop1==0)        
                        {   if(op1.equalsIgnoreCase("AND"))
                            {
                                for(int j=0;j<4;j++)
                                {
                                    d2[j]=(byte) (a2[j]&b2[j]);
                                }
                                
                            
                            }
                            else if(op1.equalsIgnoreCase("OR"))
                            {
                                for(int j=0;j<4;j++)
                                {
                                    d2[j]=(byte) (a2[j]|b2[j]);
                                }
                                
                            }
                            else if(op1.equalsIgnoreCase("XOR"))
                            {
                                for(int j=0;j<4;j++)
                                {
                                    d2[j]=(byte) (a2[j]^b2[j]);
                                }
                                
                            }
                            else if(op1.equalsIgnoreCase("NAND"))
                            {
                                for(int j=0;j<4;j++)
                                {
                                    d2[j]=(byte) (a2[j]&b2[j]);
                                    d2[j]=(byte)(1 - d2[j]);
                                }
                            }
                            else if(op1.equalsIgnoreCase("NOR"))
                            {
                                for(int j=0;j<4;j++)
                                {
                                    d2[j]=(byte) (a2[j]|b2[j]);
                                    d2[j]=(byte)(1 - d2[j]);
                                }
                               
                            }
                        }
                        
                        System.out.println(a+"  "+b+"   "+"o/p");
                        out.write(a+"  "+b+"   "+"o/p"+'\n');
                        out.newLine();
                        
                        for(int j=0;j<4;j++)
                        {
                            System.out.println(a2[j]+"  "+b2[j]+"   "+d2[j]);
                            out.write(a1[j]+"  "+b1[j]+"   "+d2[j]);
                            out.newLine();
                        }
                    
                        out.newLine();
                        
                    
                    } 
                    
            }
        in.close();
        out.close();
        }
        catch(Exception e)
        {
        }
    
    
    
    
    }
}
